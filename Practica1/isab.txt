#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <time.h>
#include "pow.h"

#define MAX 100000000

typedef struct
{
    long ep, eu, res;
} entradaHash;

long encontrarHash(entradaHash *e)
{
    int i;
    long x=-1;

    for (i = e->ep; (i < e->eu) && (x <= 0); i++)
    {
        if ((long)pow_hash(i) == e->res)
        {
            x = i;
        }
    }

    return x;
}

int main(int argc, char *argv[])
{
    int i, t1, t2, error, res1, res2;
    pthread_t h1, h2;
    entradaHash ent;
    long sol;
    // printf("El valor de f(%d) es %ld", 999999, pow_hash(999999));

t1 = clock();

    /*Creacion del hilo*/
    ent.ep = 0;
    ent.eu = MAX;
    ent.res = atoi(argv[1]);

    error = pthread_create(&h1, NULL, encontrarHash, &ent);
    if (error != 0)
    {
        fprintf(stderr, "pthread_create: %s\n", strerror(error));
        exit(EXIT_FAILURE);
    }

sol= pthread_join(h1, NULL);
    if (sol >= 0)
        printf("\nf(%ld)=%d", sol, atoi(argv[1]));
    else
        printf("\nNo se ha encontrado");

    t2 = clock();
    printf("\nEl tiempo trancurrido es %d", t2 - t1);

    return 0;
}